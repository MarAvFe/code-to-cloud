name: deploy

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

jobs:

  docker-image-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: ${{ secrets.DOCKER_USERNAME }}/hello-pong
          tags: latest
          tag_with_ref: true
          path: src/
          push: ${{ startsWith(github.ref, 'refs/tags/') }}


  provision-k8s-cluster:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tf
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: aws-iam-authenticator
        uses: prepor/action-aws-iam-authenticator@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.1.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init --backend-config="bucket=hello-pong-state-bucket" --backend-config="key=eks/terraform.tfstate"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Apply
        # if: startsWith(github.ref, 'refs/tags/')  #
        run: terraform apply -auto-approve

      - name: Configure aws
        run: |
          mkdir ~/.kube
          terraform output kubectl_config | base64 -w 0 > ~/.kube/eks_kubectl_config
          export KUBECONFIG=~/.kube/eks_kubectl_config
          echo $(terraform output cluster_name) | cut -d' ' -f4 > ~/.kube/eks_cluster_name
          export CLUSTER_NAME=$(cat ~/.kube/eks_cluster_name)
          cat ~/.kube/eks_kubectl_config
          terraform output kubectl_config
          aws eks --region us-east-2 update-kubeconfig --name $CLUSTER_NAME

      #- name: Setup kubectl for deployment
      #  uses: steebchen/kubectl@master
      #  env:
      #    KUBE_CONFIG_DATA: $KUBECONFIG
      #  with:
      #   args: apply -f k8s/
 
